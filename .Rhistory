b <- a, if a$val>1000000
b <- a if a$val>1000000
b = a(a$val>1000000)
b = a$val>1000000
fix(b)
fix(b)
a$val>1000000
a[a$val>1000000]
a[a$val>1000000 | count.fields(a$serialno)]
a$val>1000000
a[a$val>1000000]
dim[a$val>100000]
c = a[a$val>1000000]
View(c)
View(c)
select.list(a$serialno, a$val>1000000)
a[a$val > 1000000,c("Val")]
view(a[a$val > 1000000])
View(a[a$val > 1000000])
a[a$val>24]
a$val>24
de= a[a$val>24]
de= a[a$val=24]
a[a$val=24]
a[a$val='24']
a[a$val=='24']
all(a$bds=3 & a$rms=4)
all(a$bds==3 & a$rms=4=)
all(a$bds==3 & a$rms==4)
a$bds==3 & a$rms==4
a[a$bds==3 & a$rms==4]
sum(a$bds==3 & a$rms==4)
table(a$bds==3 & a$rms==4)
colSums(a$bds==3 & a$rms==4)
Sum(a$bds==3 & a$rms==4)
a$bds==3
dfc = a[a$bds==3 & a$rms==4]
View(dfc)
strsplit(a)
strsplit(a,"wgtp")
strsplit(a, split="wgtp")
quantile(a$ybl)
quantile(a$YBL)
quantile(a$YBL, na.rm=FALSE)
quantile(a$YBL, na.rm=TRUE)
aaa <- read.csv("D:\\Online courses\\Data analysis\\2\\quiz\\ss06pid.csv")
View(aaa)
View(aaa)
library(datasets)
data(iris)
View(iris)
View(iris)
irisSubset <- subset(iris, select = c(iris$Sepal.Length,iris$Sepal.Width,iris$Petal.Lenght,iris$Petal.Width))
irisSubset <- subset(iris, 1:4)
irisSubset <- subset(iris$Sepal.Length,iris$Sepal.Width,iris$Petal.Lenght,iris$Petal.Width)
loandt <- read.csv("D:\\Online courses\\Data analysis\\assignment 1\\loansData.csv")
View(loandt)
View(loandt)
# Load libraries
library(maps)
library(Hmisc)
library(RColorBrewer)
load("D:/Online courses/Data analysis/assignment 1/exampleProject/exampleProject/.RData")
View(quakesRaw)
View(quakesRaw)
min(loandt$Interest.Rate)
max(loandt$Interest.Rate)
sum(is.na(loandt))
summary(loandt)
hist(loandt$state,col="grey")
hist(loandt$Interest.Rate,col="grey")
ir <- cut(loandt$Interest.Rate, g=4)
ir <- is.numeric(loandt$Interest.Rate)
ir <- as.numeric(loandt$Interest.Rate)
ir
dir <- as numeric(loandt$Debt.To.Income.Ratio)
dir <- as.numeric(loandt$Debt.To.Income.Ratio)
amr <- as.numeric(loandt$Amount.Requested)
ll <- as.numeric(loandt$Loan.Length)
ll
ho <- as.numeric(loandt$Home.Ownership)
el <- as.numeric(loandt$Employment.Length)
lp <- as.numeric(loandt$Loan.Purpose)
rcb <- as.numeric(loandt$Revolving.CREDIT.Balance)
hist(ir,col="grey")
lmfin <- lm(ir ~ amr + ll + dir + mi +lp + rcb)
mi <- as.numeric(loandt$Monthly.Income)
lmfin <- lm(ir ~ amr + ll + dir + mi +lp + rcb)
summary(lmfin)
lmfin <- lm(ir ~ amr + ll + dir + mi +lp + rcb + ho)
summary(lmfin)
plot(ir,lmfin$residuals,col=mi,pch=19,xlab="Interest rate %", ylab="Full Model Residuals",cex.axis=cx,cex.lab=cx)
cx = 1.3
plot(ir,lmfin$residuals,col=mi,pch=19,xlab="Interest rate %", ylab="Full Model Residuals",cex.axis=cx,cex.lab=cx)
plot(ir, lmfin$residuals)
hist(lmfin$residuals)
plot(ir,lmfin$residuals)
plot(lmfin$residuals)
plot(ir,lmfin$residuals)
plot(mi,lmfin$residuals)
resid <- lmfin$residuals
mi2 <- c(mi, 1:2498)
mi2 <- c(mi, 1:1498)
mi2 <- c(mi, 1:498)
plot(mi 1:2498,lmfin$residuals)
plot(mi2,lmfin$residuals)
mi2 <- c(mi, 1:398)
mi2 <- c(mi, 1:298)
mi2 <- c(mi, 1:198)
mi2 <- c(mi, 1:98)
mi2 <- c(mi, 1:78)
mi2 <- c(mi, 1:88)
mi2 <- c(mi, 1:98)
mi2 <- c(mi, 1:98)
plot(mi2,lmfin$residuals)
mi2 <- c(mi, 2:98)
mi2 <- c(mi, 8:98)
mi2 <- c(mi, 18:98)
mi2 <- c(mi, 38:98)
mi2 <- c(mi, 88:98)
mi2 <- c(mi, 98:98)
mi2 <- c(mi, 99:98)
mi2 <- c(mi, 100:98)
mi2 <- c(mi, 100:100)
hist(lmfin$residuals, ylab = "Model residuals")
hist(lmfin$residuals, xlab = "Model residuals")
data <-  download.file("https://spark-public.s3.amazonaws.com/dataanalysis/samsungData.rda", destfile="samsungData.rda", method="auto")
data <-  load("D:\\Online courses\\Data analysis\\assignment 2\\data\\samsungData.rda")
View(samsungData)
View(samsungData)
library(tree)
table(data$activity)
table(samsungData$activity)
par(mfrow=c(1,2))
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
plot(samsungData[samsungData$subject==1,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==1,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
plot(samsungData[samsungData$subject==3,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==3,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
plot(samsungData[samsungData$subject==5,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==5,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
plot(samsungData[samsungData$subject==6,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==6,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
kClust <- kmeans(samsungData[samsungData$subject==1,-c(562,563)],centers=6,nstart=1)
table(kClust$cluster,samsungData$activity[samsungData$subject==1])
kClust <- kmeans(samsungData[samsungData$subject==2,-c(562,563)],centers=6,nstart=1)
table(kClust$cluster,samsungData$activity[samsungData$subject==1])
kClust <- kmeans(samsungData[samsungData$subject==2,-c(562,563)],centers=6,nstart=1)
table(kClust$cluster,samsungData$activity[samsungData$subject==2])
kClust <- kmeans(samsungData[samsungData$subject==1,-c(562,563)],centers=6,nstart=1)
table(kClust$cluster,samsungData$activity[samsungData$subject==1])
tree1 <-tree(kclust$cluster ~ tBodyAcc-mean()-X + tGravityAcc-mean()-X + tBodyAccJerk-mean()-X +tBodyGyro-mean()-X + tBodyGyroJerk-mean()-X,data=samsungData)
tree1 <- tree(kclust$cluster ~ tBodyAcc-mean()-X + tGravityAcc-mean()-X + tBodyAccJerk-mean()-X +tBodyGyro-mean()-X + tBodyGyroJerk-mean()-X,data=samsungData)
library(tree)
table(kClust$cluster,samsungData$activity[samsungData$subject==1])
plot(samsungData[samsungData$subject==6,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==6,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
install.packages("tree")
library(tree)
tree1 <- tree(kclust$cluster ~ tBodyAcc-mean()-X + tGravityAcc-mean()-X + tBodyAccJerk-mean()-X +tBodyGyro-mean()-X + tBodyGyroJerk-mean()-X,data=samsungData)
tree1 <- tree(activity ~ tBodyAcc-mean()-X + tGravityAcc-mean()-X + tBodyAccJerk-mean()-X +tBodyGyro-mean()-X + tBodyGyroJerk-mean()-X,data=samsungData)
tree1 <- tree(activity ~ tBodyAcc-mean()-X + tGravityAcc-mean()-X,data=samsungData)
tree1 <- tree(samsungData$activity ~ samsungData$tBodyAcc-mean()-X + samsungData$tGravityAcc-mean()-X,data=samsungData)
tree1 <- tree(samsungData$activity ~ samsungData$tBodyAcc-mean()-X,data=samsungData)
tree1 <- tree(samsungData$activity ~ samsungData$tBodyAcc-mean()-X)
tree1 <- tree(samsungData$activity ~ samsungData$tBodyAcc)
tree1 <- tree(samsungData$activity ~ samsungData$tBodyAcc-mean()-X)
acc <- c(samsungData,1)
fix(acc)
fix(numericActivity)
fix(acc)
grav< c(samsungData,41)
grav< c(samsungData,41)
grav <- c(samsungData,41)
tree1 <- tree(samsungData$activity ~ acc)
acc <- as.numeric(c(samsungData,1))
1 <- samsungData[samsungData$subject==1]
tree1 <- tree(samsungData$activity ~ acc + grav)
plot(samsungData[samsungData$subject==1,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19, xlab = 'Mean Body acceleration')
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19, xlab = "Mean Body acceleration")
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
par(mfrow=c(1,2))
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
plot(samsungData[samsungData$subject==1,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==1,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19, xlab = "Mean Body acceleration")
par(mfrow=c(1,2))
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
plot(samsungData[samsungData$subject==1,1],pch=19,col=numericActivity,ylab=names(samsungData)[1])
plot(samsungData[samsungData$subject==1,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
plot(samsungData[samsungData$subject==1,1],pch=19,col=numericActivity,ylab=names(samsungData, xlab ='1')[1])
plot(samsungData[samsungData$subject==1,2],pch=19,col=numericActivity,ylab=names(samsungData)[2])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
par(mfrow=c(1,2))
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
plot(samsungData[samsungData$subject==1,1],pch=19,col=numericActivity,ylab=names(samsungData, xlab ='1')[1])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
par(mfrow=c(1,2))
numericActivity <- as.numeric(as.factor(samsungData$activity))[samsungData$subject==1]
plot(samsungData[samsungData$subject==1,1],pch=19,col=numericActivity,ylab="1")[1])
legend(150,-0.1,legend=unique(samsungData$activity),col=unique(numericActivity),pch=19)
qbeta(1,2,1)
qbeta(0.75,2,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
nchar(htmlCode[[10]])
nchar(htmlCode[[20]])
nchar(htmlCode[[30]])
nchar(htmlCode[[100]])
close(con)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
htmlCode = readlines(con)
htmlCode = readLines(con)
htmlCode[[4]]
htmlCode[,4]
htmlCode
htmlCode[4]
htmlCode = data.frame(readLines(con))
View(htmlCode)
View(htmlCode)
View(htmlCode)
qnorm(.95,mean = 1100 , sd = 75)
ppois(10, lambda = 5 *3)
choose(5,4)*.5^5 + choose(5,5)*.5^5
install.packages("combinat")
library(combinat)
combn(9,3)
combn(3,9)
choose(9,3)
install.packages("knitr")
setwd("F:/#Online courses/#Data Science specialisation/5. Reproducible research/assign1/RepData_PeerAssessment1-master")
data <- read.csv("activity.csv")
View(data)
View(data)
View(data)
View(data)
hist(data$steps)
View(data)
mean_day <- cumsum(data$steps, by=data$date, mean)
mean_day <- aggregate(data$steps, by=data$date, mean)
mean_day <- aggregate(data$steps, by=list(data$date), mean)
View(mean_day)
median_day <- aggregate(data$steps, by=list(data$date), median)
View(median_day)
median(data$steps)
median(data$steps, na.rm = FALSE)
hist(data$steps, data$date)
hist(data$steps)
View(median_day)
sum_day <- aggregate(data$steps, by=list(data$date), sum)
View(sum_day)
hist(sum_day)
View(sum_day)
hist(sum_day$x)
View(sum_day)
plot(sum_day)
lines(sum_day)
hist(sum_day)
plot.histogram(sum_day)
plot(sum_day)
plot(sum_day, type = "h")
plot(sum_day, type = "l")
plot(sum_day, type = "h")
plot(sum_day, type = "h", xlab = "Date", ylab = "Number of steps")
View(data)
View(mean_day)
sum_day <- aggregate(data$interval, by=list(data$date), mean)
sum_day <- aggregate(data$steps, by=list(data$date), sum)
int_day <- aggregate(data$interval, by=list(data$date), mean)
View(int_day)
rm(int_day)
View(data)
mean_day <- aggregate(data$steps, by=list(data$interval), mean)
mean_day <- aggregate(data$steps, by=list(data$date), mean)
int_day <- aggregate(data$steps, by=list(data$interval), mean)
View(int_day)
View(int_day)
int_day <- aggregate(data$steps, by=list(data$interval), max)
View(int_day)
int_day <- aggregate(data$steps, by=list(data$interval), meanm na.action = na.omit)
int_day <- aggregate(data$steps, by=list(data$interval), mean, na.action = na.omit)
View(int_day)
View(mean_day)
median_day <- aggregate(data$steps, by=list(data$date), median,na.action = na.omit)
median_day <- aggregate(data$steps, by=list(data$date), median, na.action = na.omit)
median_day <- aggregate(data$steps, by=list(data$date), median)
View(median_day)
int_day <- aggregate(data$steps, by=list(data$interval), mean)
View(int_day)
int_day <- rep(tapply(na.omit(data$steps),data$interval,mean))
int_day <- tapply(na.omit(data$steps),data$interval,mean)
int_day <- rep(tapply(na.omit(data$steps),data$interval,mean), each = NA)
int_day <- tapply(data$steps,data$interval,mean)
data$steps <- factor(data$steps, exclude = "")
int_day <- aggregate(data$steps, by=list(data$interval), mean)
View(int_day)
View(data)
int_day <- aggregate(data$steps, by=list(data$interval), mean, na.action = na.omit)
View(int_day)
warnings()
int_day <- aggregate(as.numeric(data$steps), by=list(data$interval), mean, na.action = na.omit)
View(int_day)
int_day <- aggregate(as.numeric(data$steps), by=list(as.numeric(data$interval), mean, na.action = na.omit)
int_day <- aggregate(as.numeric(data$steps), by=list(as.numeric(data$interval), mean, na.action = na.omit)
int_day <- aggregate(as.numeric(data$steps), by=list(as.numeric(data$interval),mean, na.action = na.omit)
int_day <- aggregate(as.numeric(data$steps), by=list(as.numeric(data$interval)),mean, na.action = na.omit)
View(int_day)
View(int_day)
View(int_day)
max(int_day$X)
is.na(data)
sum(is.na(x))
sum(is.na(data))
missing <- sum(is.na(data))
View(mean_day)
mean(mean_day$x)
mean(mean_day$x, na.rm = FALSE)
mean(mean_day$x, na.rm = TRUE)
mean <- mean(mean_day$x, na.rm = TRUE)
mean <- mean(mean_day$x, na.rm = TRUE, trim = 2)
mean <- round(mean(mean_day$x, na.rm = TRUE),2)
data[1,1,1]
data[[1]]
data[[2]]
is.na(data[[1]]) <- mean
View(data)
View(data)
data[[1]][is.na(data[[1]])] <- mean
View(data)
data[[1]][is.na(data[[1]])] <- mean
View(data)
data$steps[is.na(data$steps)] <- mean
View(data)
factor(data$steps[is.na(data$steps)]) <- mean
data$steps[is.na(data$steps)] = mean
data$steps[is.na(data$steps)] == mean
View(data)
mn <- round(mean(mean_day$x, na.rm = TRUE),2)
data$steps[is.na(data$steps)] = mn
data$steps <- as.numeric(data$steps)
data$steps[is.na(data$steps)] = mn
View(data)
sum_day2 <- aggregate(data$steps, by=list(data$date), sum)
plot(sum_day2, type = "h", xlab = "Date", ylab = "Number of steps")
mean_day2 <- aggregate(data$steps, by=list(data$date), mean)
median_day2 <- aggregate(data$steps, by=list(data$date), median)
plot(sum_day2, type = "h", xlab = "Date", ylab = "Number of steps", title = "Dataset without NAs")
plot(sum_day2, type = "h", xlab = "Date", ylab = "Number of steps", main = "Dataset without NAs")
View(mean_day2)
View(median_day)
View(median_day2)
int_day <- aggregate(as.numeric(data$steps), by=list(as.numeric(data$interval)),mean, na.action = na.omit)
View(int_day)
max(int_day$X)
View(int_day)
max <- max(int_day$X)
max <- max(int_day$X)
max <- max(int_day)
View(int_day)
View(int_day)
max <- max(int_day)
for(i in 1:length(int_day$x))
{ if(int_day$x[i] == max)
print(i)
}
max <- max(int_day)
for(i in 1:length(int_day$x))
{ if(int_day$x[i] == max)
max_place = print(i)
}
max <- max(int_day)
for(i in 1:length(int_day$x))
{ if(int_day$x[i] == max)
max_place <- i
}
max <- max(int_day$x)
for(i in 1:length(int_day$x))
{ if(int_day$x[i] == max)
max_place <- i
}
maxplace
max_place
for(i in 1:length(data$date))
{ if(weekdays(as.Date(data$date[i]))
days[i] == "Weekday"
else days[i] == "Weekend"
}
for(i in 1:length(data$date))
{ ifelse(weekdays(as.Date(data$date[i])), days[i] == "Weekday",days[i] == "Weekend")
}
days
days = 0
for(i in 1:length(data$date))
{ ifelse(weekdays(as.Date(data$date[i])), days[i] == "Weekday",days[i] == "Weekend")
}
days
days = 0
for(i in 1:length(data$date))
{ ifelse(weekdays(data$date[i]), days[i] == "Weekday",days[i] == "Weekend")
}
days
weekdays(data$date[1])
weekdays(as.Date(data$date[1]))
wk = c("Monday","Tuesday","Wednesday","Thursday","Friday")
days = 0
wk = c("Monday","Tuesday","Wednesday","Thursday","Friday")
for(i in 1:length(data$date))
{ ifelse(weekdays(data$date[i] %in% wk), days[i] == "Weekday",days[i] == "Weekend")
}
for(i in 1:length(data$date))
{ ifelse(weekdays(data$date[i] %in% c("Monday","Tuesday","Wednesday","Thursday","Friday")), days[i] == "Weekday",days[i] == "Weekend")
}
for(i in 1:length(data$date))
{ ifelse(weekdays(as.Date(data$date[i]) %in% wk, days[i] == "Weekday",days[i] == "Weekend")
}
for(i in 1:length(data$date))
ifelse(weekdays(as.Date(data$date[i]) %in% wk, days[i] == "Weekday",days[i] == "Weekend")
for(i in 1:length(data$date))
ifelse(weekdays(as.Date(data$date[i])) %in% wk, days[i] == "Weekday",days[i] == "Weekend")
days
for(i in 1:length(data$date))
ifelse(weekdays(as.Date(data$date[i]))== "Saurtday" || weekdays(as.Date(data$date[i]))== "Sunday", days[i] == "Weekday",days[i] == "Weekend")
dy <- weekdays(as.Date(data$date))
days = c(1:lenght(dy))
days = c(1:length(dy))
dy <- weekdays(as.Date(data$date))
days = c(1:length(dy))
for(i in 1:length(dy))
ifelse(dy[i]=="Saurtday" || dy[i]=="Sunday",days[i] = "Weekend", days[i] = "Weekday")
dy <- weekdays(as.Date(data$date))
days = c(1:length(dy))
for(i in 1:length(dy))
ifelse(dy[i]=="Saurtday" || dy[i]=="Sunday",days[i] == "Weekend", days[i] == "Weekday")
for(i in 1:length(dy))
ifelse(dy[i]=="Saurtday") days[i] == "Weekend"
for(i in 1:length(dy))
if(dy[i]=="Saurtday") days[i] == "Weekend"
days
for(i in 1:length(dy))
if(dy[i]=="Saturday") days[i] == "Weekend"
days
for(i in 1:length(dy))
if(dy[i]=="Saturday") days[i] <- c("Weekend")
days
for(i in 1:length(dy))
ifelse(dy[i]=="Saturday" || dy[i]=="Sunday", days[i] <- c("Weekend"), days[i] <- c("Weekday""))
for(i in 1:length(dy))
ifelse(dy[i]=="Saturday" || dy[i]=="Sunday", days[i] <- c("Weekend"), days[i] <- c("Weekday"))
days
wk <- data.frame(data,days)
View(wk)
library(lattice)
View(wk)
plot(wk$steps, type = "l", by = wk$days)
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
plot(subset(wk, wk$days == "Weekday"), col = "blue", type = "l")
plot(subset(wk, wk$days == "Weekend"), col = "blue", type = "l")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
plot(subset(wk, wk$days == "Weekday"), col = "blue")
plot(subset(wk, wk$days == "Weekend"), col = "blue")
par(mfrow = c(2, 1))
plot(subset(wk, wk$days == "Weekday"), col = "blue")
plot(subset(wk, wk$days == "Weekend"), col = "blue")
xyplot(wk$steps|wk$days, data = wk, layout = c(1,2))
xyplot(wk$steps, groups = wk$days, data = wk, layout = c(1,2))
xyplot(wk$steps, data = wk, layout = c(1,2))
xyplot(wk$steps, data = wk$days, layout = c(1,2))
xyplot(wk$steps|wk$days, layout = c(1,2))
xyplot(factor(wk$steps)|factor(wk$days), layout = c(1,2))
xyplot(wk$steps, layout = c(1,2))
View(wk)
plot(wk$steps)
plot(subset(wk$steps, wk$days == "Weekedn"))
plot(subset(wk$steps, wk$days == "Weekend"))
plot(subset(wk$steps, wk$days == "Weekend"),type = "l")
plot(subset(wk$steps, wk$days == "Weekend"),type = "l",col = "blue")
plot(subset(wk$steps, wk$days == "Weekend"),type = "l",col = "blue")
plot(subset(wk$steps, wk$days == "Weekday"),type = "l",col = "blue")
wk$days <- as.factor(wk$days)
xyplot(wk$steps|wk$days, layout = c(1,2))
xyplot(as.numeric(wk$steps)|wk$days, layout = c(1,2))
install.packages("knitr")
library(knitr)
xyplot(as.numeric(wk$steps)|wk$days, layout = c(1,2))
knit2html()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggpplot(wk$steps)
+ geom_line()
+ facet_grid(.~wk$days)
ggplot(wk$steps)
+ geom_line()
+ facet_grid(.~wk$days)
plot(subset(wk$steps, wk$days == "Weekday"), col = "blue", type = "l", main = "Weekday")
plot(subset(wk$steps, wk$days == "Weekday"), col = "blue", type = "l", main = "Weekday", ylab = "", xlab = "")
plot(subset(wk$steps, wk$days == "Weekend"), col = "blue", type = "l", main = "Weekend",ylab = "", xlab = "")
xyplot(wk$steps|wk$days, data = wk, layout = c (1,2))
